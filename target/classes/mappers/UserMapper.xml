<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <!--
        namespace:命名空间  作为多个mapper文件的唯一标识
        -->
<mapper namespace="user">

    <!--
    向tb_user添加数据
    -->
    <insert id="addUser">
        insert into tb_user(uid,userName,pwd,tel,address)
        values (null ,'李四','123','123456789','湖南')
    </insert>

    <!--
    将来，我们将需要给多个字段复制的数据封装到一个对象
    使用对象作为参数
    parameterType指定参数类型
    当传入的参数是对象的时候，可以使用#{对象的属性名}
    #{对象的属性名}相当于调用了对象的get方法
    例如：#{userName}   getUserName()
    -->
    <insert id="insertUser" parameterType="com.whz.User">
        insert into tb_user(uid,userName,pwd,tel,address)
        values (null,#{userName},#{pwd},#{tel},#{address})
    </insert>

    <!--
    根据uid删除
    当传入的参数是一个int类型或者是integer类型或者是string类型的时候
    那么parameterType可以写，也可以不写

    #{id}代表将传进来的参数值放在id占位符中，使用#{}取出占位符的值
    给对应的字段赋值
    -->
    <delete id="deleteByUid">
        delete from tb_user
        where uid=#{id}
    </delete>

    <!--
    根据uid修改数据
    -->
    <update id="updateUserByUid" parameterType="com.whz.User">
        update tb_user set userName=#{userName},pwd=#{pwd},tel=#{tel},address=#{address}
        where uid=#{uid}
    </update>

    <!--
    查询所以数据
    resultType 属性 指定查询的每一条数据应该封装给哪个对象
    -->
    <select id="findAllUsers" resultType="com.whz.User">
        select * from tb_user
    </select>

    <!--
    根据uid查询数据
    -->
    <select id="findUsers" parameterType="Integer" resultType="com.whz.User">
        select * from tb_user
        where uid=#{uid}
    </select>
</mapper>